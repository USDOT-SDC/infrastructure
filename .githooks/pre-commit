#!/usr/bin/env python

import subprocess
import sys


def get_user_name() -> str:
    # run 'git config user.name' to get the configured user name
    result: subprocess.CompletedProcess[bytes] = subprocess.run(["git", "config", "user.name"], stdout=subprocess.PIPE)
    git_user_name: str = result.stdout.decode("utf-8").strip()
    return git_user_name


def get_user_email() -> str:
    # run 'git config user.name' to get the configured user email
    result: subprocess.CompletedProcess[bytes] = subprocess.run(["git", "config", "user.email"], stdout=subprocess.PIPE)
    git_user_email: str = result.stdout.decode("utf-8").strip()
    return git_user_email


def is_full_name(name: str) -> bool:
    """Check if the string consists of exactly two words, both starting with a capital letter."""
    words = name.split()
    return len(words) == 2 and all(word[0].isupper() for word in words)


def is_correct_email(email: str) -> bool:
    """Check if the email ends with @dot.gov."""
    return email.endswith("@dot.gov")


def main() -> None:
    error = False
    user_name: str = get_user_name()
    if not is_full_name(user_name):
        print(f"Error: Your Git user.name:'{user_name}' has not been set correctly.")
        print("Set your username with the command: 'git config --global user.name \"First Last\"'")
        error = True
    user_email: str = get_user_email()
    if not is_correct_email(user_email):
        print(f"Error: Your Git user.email:'{user_email}' has not been set correctly.")
        print("Set your email address with the command: 'git config --global user.email \"first.last.ctr@dot.gov\"'")
        error = True
    if error:
        sys.exit(1)


if __name__ == "__main__":
    main()
